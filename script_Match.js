// ===================
// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
// ===================
const allQuestions = [
  {
    image: "images/bridge.jpg",
    choices: ["Tree", "Bridge", "House", "Door"],
    correct: "Bridge",
  },
  {
    image: "images/butterfly.jpg",
    choices: ["Bug", "Bee", "Butterfly", "Ant"],
    correct: "Butterfly",
  },
  {
    image: "images/cave.jpg",
    choices: ["Hill", "House", "Rock", "Cave"],
    correct: "Cave",
  },
  {
    image: "images/crow.jpg",
    choices: ["Duck", "Bird", "Crow", "Owl"],
    correct: "Crow",
  },
  {
    image: "images/deer.jpg",
    choices: ["Goat", "Horse", "Deer", "Sheep"],
    correct: "Deer",
  },
  {
    image: "images/feather.jpg",
    choices: ["Cloth", "Paper", "Leaf", "Feather"],
    correct: "Feather",
  },
  {
    image: "images/hedgehog.jpg",
    choices: ["Rabbit", "Hedgehog", "Mouse", "Hamster"],
    correct: "Hedgehog",
  },
  {
    image: "images/ladybug.jpg",
    choices: ["Bug", "Spider", "Ladybug", "Ant"],
    correct: "Ladybug",
  },
  {
    image: "images/key.jpg",
    choices: ["Key", "Door", "Box", "Lock"],
    correct: "Key",
  },
  {
    image: "images/lake.jpg",
    choices: ["Waterfall", "Sea", "Water", "Lake"],
    correct: "Lake",
  },
  {
    image: "images/leaf.jpg",
    choices: ["Leaf", "Grass", "Flower", "Tree"],
    correct: "Leaf",
  },
  {
    image: "images/mushroom.jpg",
    choices: ["Food", "Mushroom", "Tree", "Plant"],
    correct: "Mushroom",
  },
  {
    image: "images/owl.jpg",
    choices: ["Duck", "Owl", "Eagle", "Bird"],
    correct: "Owl",
  },
  {
    image: "images/rabbit.jpg",
    choices: ["Dog", "Cat", "Mouse", "Rabbit"],
    correct: "Rabbit",
  },
  {
    image: "images/rainbow.jpg",
    choices: ["Cloud", "Rainbow", "Moon", "Sun"],
    correct: "Rainbow",
  },
  {
    image: "images/stone.jpg",
    choices: ["Rainbow", "Brick", "Stone", "Wall"],
    correct: "Stone",
  },
  {
    image: "images/snail.jpg",
    choices: ["Worm", "Bug", "Ant", "Snail"],
    correct: "Snail",
  },
  {
    image: "images/book.jpg",
    choices: ["Story", "Books", "Paper", "Note"],
    correct: "Books",
  },
  {
    image: "images/spiderweb.jpg",
    choices: ["Line", "Spiderweb", "Spider", "Net"],
    correct: "Spiderweb",
  },
  {
    image: "images/squirrel.jpg",
    choices: ["Mouse", "Rabbit", "Squirrel", "Hamster"],
    correct: "Squirrel",
  },
  {
    image: "images/tree.jpg",
    choices: ["Leaf", "Tree", "Plant", "Grass"],
    correct: "Tree",
  },
  {
    image: "images/vine.jpg",
    choices: ["Vine", "Leaf", "Branch", "Root"],
    correct: "Vine",
  },
  {
    image: "images/waterfall.jpg",
    choices: ["Waterfall", "River", "Lake", "Leaf"],
    correct: "Waterfall",
  },
  {
    image: "images/wolf.jpg",
    choices: ["Bear", "Wolf", "Fox", "Dog"],
    correct: "Wolf",
  },
  {
    image: "images/flower.jpg",
    choices: ["Flower", "Tree", "Grass", "River"],
    correct: "Flower",
  },
  {
    image: "images/cloud.jpg",
    choices: ["Cloud", "Rain", "Sun", "Fog"],
    correct: "Cloud",
  },
  {
    image: "images/grass.jpg",
    choices: ["Tree", "Grass", "Leaf", "Plant"],
    correct: "Grass",
  },
  {
    image: "images/star.jpg",
    choices: ["Sky", "Sun", "Star", "Moon"],
    correct: "Star",
  },
  {
    image: "images/moon.jpg",
    choices: ["Star", "Moon", "Plant", "Sun"],
    correct: "Moon",
  },
  {
    image: "images/forest.jpg",
    choices: ["Rock", "Wood", "Mountain", "Forest"],
    correct: "Forest",
  },
  {
    image: "images/mountain.jpg",
    choices: ["Tree", "Rock", "Nest", "Mountain"],
    correct: "Mountain",
  },
  {
    image: "images/wood.jpg",
    choices: ["Wood", "Tree", "Grass", "Plant"],
    correct: "Wood",
  },
  {
    image: "images/horse.jpg",
    choices: ["Cow", "Horse", "Dog", "Zebra"],
    correct: "Horse",
  },
  {
    image: "images/nest.jpg",
    choices: ["Spider", "Bird", "Nest", "Tree"],
    correct: "Nest",
  },
  {
    image: "images/foggy.jpg",
    choices: ["Cloud", "Rain", "Sun", "Fog"],
    correct: "Fog",
  },
  {
    image: "images/daisy.jpg",
    choices: ["Daisy", "Rose", "Tulip", "Sunflower"],
    correct: "Daisy",
  },
  {
    image: "images/swan.jpg",
    choices: ["Swan", "Duck", "Goose", "Bird"],
    correct: "Swan",
  },
  {
    image: "images/castle.jpg",
    choices: ["Town", "Castle", "City", "Country"],
    correct: "Castle",
  },
  {
    image: "images/fox.jpg",
    choices: ["Fox", "Wolf", "Dog", "Cat"],
    correct: "Fox",
  },
];

// ===============================
// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞ DOM element
// ===============================
let currentQuestionIndex = 0;
let score = 0;
let timeLeft = 15;
let timerInterval;
let startTime; // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô (timestamp)
let consecutiveCorrect = 0; // ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô
let ownedBonuses = []; // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö

const timerElement = document.getElementById("timer");
const questionImage = document.getElementById("question-image");
const questionTitle = document.getElementById("question-title");
const optionsContainer = document.getElementById("options-container");
const popupContainer = document.getElementById("popup-container");
const popupTitle = document.getElementById("popup-title");
const popupMessage = document.getElementById("popup-message");
const bonusContainer = document.getElementById("bonus-container");
const bonusCardsContainer = document.getElementById("bonus-cards");
const bonusItemsContainer = document.getElementById("bonus-items-container");

const baseScore = 20; // ‚úÖ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠
const timeBonus = timeLeft * 2; // ‚úÖ ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡πÄ‡∏û‡∏¥‡πà‡∏° 2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
const totalScore = baseScore + timeBonus;

// ===============================
// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à
// ===============================

document.addEventListener("DOMContentLoaded", () => {
  loadQuestion(currentQuestionIndex);
  startTimer();
});

document.addEventListener("DOMContentLoaded", () => {
  if (localStorage.getItem("gameFinished") === "true") {
    console.log("üõë ‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á");
    document.getElementById("game-background").style.display = "block";
    document.querySelector(".game-container").style.display = "none";
    return;
  }
});

function startGame() {
  let selectedQuestions = getRandomQuestions(40, 5); // ‡∏™‡∏∏‡πà‡∏° 5 ‡∏Ç‡πâ‡∏≠
  localStorage.setItem("savedQuestions", JSON.stringify(selectedQuestions)); // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô
  localStorage.setItem("latestAnswers", JSON.stringify([])); // ‚úÖ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
}

// ===============================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
// ===============================

async function loadQuestion(index) {
  const questionObj = questions[index];
  const imgElement = document.getElementById("question-image");
  const optionsContainer = document.getElementById("options-container");
  const questionTitle = document.getElementById("question-title"); //  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà

  //  ‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î
  optionsContainer.style.visibility = "hidden";
  imgElement.style.display = "none";

  //  ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
  await new Promise((resolve) => {
    imgElement.src = questionObj.image;
    imgElement.onload = resolve; //  ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  });

  //  ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  imgElement.style.display = "block";

  questionTitle.textContent = "Match It Up!!";
  questionImage.src = questionObj.image;

  optionsContainer.innerHTML = "";

  questionObj.choices.forEach((choice) => {
    const btn = document.createElement("button");
    btn.classList.add("option");
    btn.textContent = choice;
    btn.addEventListener("click", () => checkAnswer(choice));
    optionsContainer.appendChild(btn);
  });

  //  ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  optionsContainer.style.visibility = "visible";

  //  ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
  saveRoundAnswers();

  document.getElementById("score").textContent = `‚úî ${score}`;
}

function preloadImage(src) {
  return new Promise((resolve) => {
    const img = new Image();
    img.src = src;
    img.onload = resolve;
  });
}

// // ‡∏î‡∏∂‡∏á 5 ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
// let questions = getRandomQuestions(allQuestions.length, 5);
// console.log("‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡∏∏‡πà‡∏°:", questions); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß

function getRandomQuestions(total, numToPick) {
  const shuffled = [...allQuestions].sort(() => 0.5 - Math.random()); // ‡∏™‡∏∏‡πà‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
  return shuffled.slice(0, numToPick); // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 5 ‡∏Ç‡πâ‡∏≠‡πÅ‡∏£‡∏Å‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß
}

const bonusItems = [
  { type: "x2", label: "x2 Score", icon: "√ó2" },
  { type: "cut", label: "Cut Choices", icon: "‚úÇ" },
  { type: "time", label: "+10s", icon: "‚è≥" },
];

let selectedBonus = null;

// ‡∏î‡∏∂‡∏á 5 ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
let questions = getRandomQuestions(40, 5);

//  ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
let currentRoundAnswers = [
  ...questions.map((q) => ({
    image: q.image,
    correctAnswer: q.correct,
    userAnswer: null, //  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
    timeout: true, //  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
  })),
];

function checkAnswer(userAnswer) {
  buttonClickSound.play(); // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°

  clearInterval(timerInterval); //  ‡∏´‡∏¢‡∏∏‡∏î Timer ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö

  const questionObj = questions[currentQuestionIndex];
  const correctAnswer = questionObj.correct;
  const allButtons = document.querySelectorAll(".option");

  allButtons.forEach((btn) => {
    if (btn.textContent === correctAnswer) {
      btn.classList.add("correct");
    }
    if (btn.textContent === userAnswer && userAnswer !== correctAnswer) {
      btn.classList.add("wrong");
    }
    btn.disabled = true;
  });

  //  ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô `currentRoundAnswers`
  const answerIndex = currentRoundAnswers.findIndex(
    (q) => q.image === questionObj.image
  );
  if (answerIndex !== -1) {
    currentRoundAnswers[answerIndex].userAnswer = userAnswer;
    currentRoundAnswers[answerIndex].timeout = false;
  }

  //  ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å `latestAnswers` ‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á `localStorage`
  localStorage.setItem("latestAnswers", JSON.stringify(currentRoundAnswers));

  //  ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (userAnswer === correctAnswer) {
    //  ‡πÉ‡∏ä‡πâ‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    const baseScore = 20; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    const timeBonus = timeLeft * 2; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    const totalScore = baseScore + timeBonus; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ
    score += totalScore; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô

    document.getElementById("score").textContent = `‚úî ${score}`;

    consecutiveCorrect++; //  ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    // const isLastQuestion = currentQuestionIndex === questions.length - 1;

    if (consecutiveCorrect === 3) {
      consecutiveCorrect = 0;

      //  ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å 3 ‡∏Ç‡πâ‡∏≠ ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ‚Üí ‡πÅ‡∏™‡∏î‡∏á `Bonus Time` ‡πÅ‡∏ö‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©
      if (isLastQuestion()) {
        setTimeout(() => {
          showBonusTime(true, () => {
            setTimeout(endGame, 1000); //  ‡∏à‡∏ö‡πÄ‡∏Å‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏±‡∏ö‡πÇ‡∏ö‡∏ô‡∏±‡∏™
          });
        }, 1000);
      } else {
        setTimeout(() => showBonusTime(false, goNext), 1000); //  ‡πÅ‡∏™‡∏î‡∏á Bonus Time ‡∏õ‡∏Å‡∏ï‡∏¥
      }
      return;
    }

    playSound("correct"); // ‚úÖ ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Good job!
    showPopup("üéâ GOOD JOB! üéâ", `You got it right!`, goNext);
  } else {
    consecutiveCorrect = 0; //  ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏´‡∏≤‡∏Å‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î
    playSound("wrong"); // ‚ùå ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á That‚Äôs a good try!
    showPopup(
      "üòî THAT'S A GOOD TRY! üòî",
      `The correct answer is "<span class='highlight'>${correctAnswer}</span>".`,
      goNext
    );
  }
}

function isLastQuestion() {
  return currentQuestionIndex === questions.length - 1;
}

function getScoreMultiplier() {
  let multiplier = 1;
  if (ownedBonuses.some((bonus) => bonus.type === "x2")) {
    multiplier *= 2;
    ownedBonuses = ownedBonuses.filter((bonus) => bonus.type !== "x2"); // ‚úÖ ‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
  }
  return multiplier;
}

function handleTimeout() {
  console.log(" ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...");

  const questionObj = questions[currentQuestionIndex];

  //  ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô `currentRoundAnswers`
  const answerIndex = currentRoundAnswers.findIndex(
    (q) => q.image === questionObj.image
  );

  if (answerIndex !== -1) {
    //  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö
    currentRoundAnswers[answerIndex].userAnswer = null;
    currentRoundAnswers[answerIndex].timeout = true;
  }

  //  ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á `localStorage` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
  localStorage.setItem("latestAnswers", JSON.stringify(currentRoundAnswers));
  console.log("üìå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:", currentRoundAnswers);

  // ‚úÖ 4Ô∏è‚É£ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤
  const totalScore = 0; // ‚ùå ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ = 0 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  score += totalScore;
  document.getElementById("score").textContent = `‚úî ${score}`;

  //  ‡πÅ‡∏™‡∏î‡∏á Popup "Time's Out"
  playSound("timeout"); // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Time‚Äôs up!
  showPopup(
    "‚è≥ TIME'S UP! ‚è≥",
    `The correct answer is "<span class='highlight'>${questionObj.correct}</span>".`,
    () => {
      if (!isLastQuestion()) {
        goNext();
      } else {
        endGame();
      }
    }
  );
}

function saveRoundAnswers() {
  console.log("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏•‡∏á localStorage:", currentRoundAnswers);
  localStorage.setItem("latestAnswers", JSON.stringify(currentRoundAnswers));
}

function showBonusTime(isFinalBonus = false, callback = null) {
  console.log(`Bonus Time ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ! (isFinalBonus = ${isFinalBonus})`);
  bonusCardsContainer.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
  selectedBonus = null;

  //  ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Bonus Time
  playBonusSound();

  //  ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
  const finalBonuses = [
    { type: "superX2", label: "üî• x2 Score", icon: "√ó2" },
    { type: "super200", label: "üí∞ +200 Points", icon: "+200" },
    { type: "super450", label: "üí∞ +450 Points", icon: "+450" },
  ];

  //  ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
  const normalBonuses = [
    { type: "x2", label: "‚≠ê x2 Score", icon: "√ó2" },
    { type: "cut", label: "‚úÇ Cut Choices", icon: "‚úÇ" },
    { type: "time", label: "‚è≥ +10s", icon: "‚è≥" },
  ];

  // ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 3 ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  const availableBonuses = isFinalBonus ? finalBonuses : normalBonuses;
  const shuffledBonuses = shuffleArray([...availableBonuses]).slice(0, 3); // ‚úÖ ‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 3 ‡∏≠‡∏±‡∏ô

  // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ
  shuffledBonuses.forEach((bonus) => {
    const card = document.createElement("div");
    card.classList.add("bonus-card");

    const hiddenIcon = document.createElement("span");
    hiddenIcon.classList.add("hidden-icon");
    hiddenIcon.textContent = bonus.icon;
    card.appendChild(hiddenIcon);

    card.addEventListener("click", () => {
      if (selectedBonus) return; // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      selectedBonus = bonus;
      card.classList.add("flipped");

      bonusClickSound.play(); // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å
      setTimeout(() => {
        bonusContainer.style.display = "none";
        applyBonus(selectedBonus.type);

        //  ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ callback ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ï‡πà‡∏≠
        if (callback) callback();
      }, 1500);
    });

    bonusCardsContainer.appendChild(card);
  });

  bonusContainer.style.display = "flex";
}

// random item card
function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]]; // ‚úÖ ‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  }
  return array;
}

function applyBonus(bonusType) {
  console.log(`üéØ ‡πÉ‡∏ä‡πâ‡πÇ‡∏ö‡∏ô‡∏±‡∏™: ${bonusType}`);

  if (bonusType === "x2" || bonusType === "superX2") {
    score *= 2;
  } else if (bonusType === "cut" || bonusType === "time") {
    ownedBonuses.push(bonusType); // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    updateBonusItemsDisplay(); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
    return; // ‚ùó ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
  } else if (bonusType === "super200") {
    score += 200;
  } else if (bonusType === "super450") {
    score += 450;
  }

  document.getElementById("score").textContent = `‚úî ${score}`;
}

function showFinalBonus() {
  console.log("üî• ‡πÅ‡∏à‡∏Å‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ç‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢!");

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©
  score += 450 + 200;
  score *= 2; // ‚úÖ ‡∏Ñ‡∏π‡∏ì 2

  document.getElementById("score").textContent = `‚úî ${score}`;

  // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏û‡∏¥‡πÄ‡∏®‡∏©
  showPopup("üéâ BONUS TIME!!! üéâ", "x2 Score + 450 + 200!", endGame);
}

function removeTwoWrongChoices() {
  const allButtons = document.querySelectorAll(".option");

  // üîπ ‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const correctAnswer = questions[currentQuestionIndex].correct;

  // üîπ ‡∏Ñ‡∏±‡∏î‡∏Å‡∏£‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏¥‡∏î
  const wrongChoices = Array.from(allButtons).filter(
    (btn) => btn.textContent !== correctAnswer
  );

  if (wrongChoices.length > 2) {
    // üîπ ‡∏™‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏¥‡∏î 2 ‡∏ï‡∏±‡∏ß ‡πÅ‡∏•‡∏∞‡∏ã‡πà‡∏≠‡∏ô
    shuffleArray(wrongChoices)
      .slice(0, 2)
      .forEach((btn) => (btn.style.display = "none"));
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤
function addExtraTime() {
  timeLeft += 5;
  updateTimerDisplay();
}

function startTimer() {
  clearInterval(timerInterval); //  ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Timer ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
  timeLeft = 15; //  ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  document.getElementById("timer").textContent = formatTime(timeLeft);

  timerInterval = setInterval(() => {
    //  ‡∏´‡∏¢‡∏∏‡∏î Timer ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ñ‡πâ‡∏≤ Game Complete Popup ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    if (
      document.getElementById("game-complete-popup").style.display === "flex"
    ) {
      console.log("üõë Timer ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ Game Complete ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà");
      clearInterval(timerInterval);
      return;
    }

    timeLeft--;
    document.getElementById("timer").textContent = formatTime(timeLeft);

    if (timeLeft <= 0) {
      clearInterval(timerInterval);
      handleTimeout();
    }
  }, 1000);
}

function updateBonusItemsDisplay() {
  bonusItemsContainer.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô

  ownedBonuses.forEach((bonus, index) => {
    const item = document.createElement("button");
    item.classList.add("bonus-item");
    item.textContent = bonus === "cut" ? "‚úÇ Cut" : "‚è≥ +10s";

    // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏° ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å inventory
    item.addEventListener("click", () => {
      applyStoredBonus(bonus); // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
      ownedBonuses.splice(index, 1); // ‡∏•‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
      updateBonusItemsDisplay(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
    });

    bonusItemsContainer.appendChild(item);
  });
}

function applyStoredBonus(bonusType) {
  bonusUseSound.play(); // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÇ‡∏ö‡∏ô‡∏±‡∏™

  if (bonusType === "cut") {
    removeTwoWrongChoices();
  } else if (bonusType === "time") {
    timeLeft += 10;
    document.getElementById("timer").textContent = formatTime(timeLeft);
  }
}

// ===============================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö popup
// ===============================

function showPopup(titleText, messageText, callback) {
  popupTitle.textContent = titleText;
  popupMessage.innerHTML = `${messageText} <br><br> <strong>Score: ${score}</strong>`; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÉ‡∏ô popup

  popupContainer.style.display = "flex";

  // ‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á Background Music ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
  backgroundMusic.volume = 0.3;

  // ‡∏õ‡∏¥‡∏î popup ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏õ‡∏ó‡∏≥ callback ‡∏ï‡πà‡∏≠
  setTimeout(() => {
    popupContainer.style.display = "none";

    // ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Background Music ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥
    backgroundMusic.volume = 0.5;

    if (callback) callback();
  }, 2500); //  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô (2.5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
}

// ===============================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏õ‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
// ===============================

function goNext() {
  if (isLastQuestion()) {
    endGame();
  } else {
    currentQuestionIndex++;
    loadQuestion(currentQuestionIndex);
    updateBonusItemsDisplay();
    startTimer();
  }
}

// ===============================
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏ö‡πÄ‡∏Å‡∏° (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏î‡∏Ç‡πâ‡∏≠)
// ===============================

function endGame() {
  console.log("üèÅ Game Over! Saving Score...");

  let playerName = localStorage.getItem("playerName") || "Guest";
  let totalScore = parseInt(localStorage.getItem(`score_${playerName}`) || "0");

  totalScore += score;  // Add new game score

  localStorage.setItem(`score_${playerName}`, totalScore); // Save player-specific score
  localStorage.setItem("totalScore", totalScore); // Update totalScore for display
  localStorage.setItem("finalScore", score);

  if (typeof updateProfileScore === "function") {
    updateProfileScore(score); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ
} else {
    console.error("‚ùå updateProfileScore is not defined!");
}

  console.log(`‚úÖ Updated Score for ${playerName}: ${totalScore}`);
  document.getElementById("final-score").textContent = score;
  document.getElementById("game-complete-popup").style.display = "flex";
}

function updateProfileScore() {
  let playerName = localStorage.getItem("playerName") || "Guest";
  let matchScore = parseInt(localStorage.getItem(`score_${playerName}_match`) || 0);
  let puzzleScore = parseInt(localStorage.getItem(`score_${playerName}_puzzle`) || 0);
  let totalScore = matchScore + puzzleScore;

  localStorage.setItem("totalScore", totalScore);
  let playerScoreElement = document.getElementById("playerScore");
  if (playerScoreElement) {
      playerScoreElement.innerText = `${totalScore} POINT`;
  }
}
document.addEventListener("DOMContentLoaded", updateProfileScore);

function saveMatchScore(finalScore) {
  let playerName = localStorage.getItem("playerName") || "Guest";
  let currentMatchScore = parseInt(localStorage.getItem(`score_${playerName}_match`) || 0);
  let newMatchScore = currentMatchScore + finalScore;

  localStorage.setItem(`score_${playerName}_match`, newMatchScore);
  updateProfileScore(); // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°
}




// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡πÄ‡∏ß‡∏•‡∏≤
function formatTime(seconds) {
  return `00:${seconds < 10 ? "0" + seconds : seconds}`;
}

function showGameCompletePopup() {
  document.getElementById("final-score").textContent = score;
  document.getElementById("game-complete-popup").style.display = "flex";
}

document.getElementById("show-answers-btn").addEventListener("click", () => {
  window.location.href = "answers_Match.html";
});

document.getElementById("play-again-btn").addEventListener("click", () => {
  console.log("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà...");

  //  ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô localStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô popup ‡πÄ‡∏î‡πâ‡∏á‡∏ã‡πâ‡∏≥
  localStorage.removeItem("gameFinished");
  localStorage.removeItem("finalScore");

  //  ‡∏•‡∏ö‡πÄ‡∏â‡∏•‡∏¢‡πÄ‡∏Å‡πà‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏≠‡∏ô‡∏Å‡∏î Back)
  localStorage.removeItem("savedAnswers");

  //  ‡∏ã‡πà‡∏≠‡∏ô Game Complete Popup ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏à‡∏£‡∏¥‡∏á
  const gameCompletePopup = document.getElementById("game-complete-popup");
  gameCompletePopup.style.display = "none";

  //  ‡∏ã‡πà‡∏≠‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° complete ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
  document.getElementById("game-complete-popup").style.display = "none";
  document.getElementById("game-background").style.display = "none";
  document.querySelector(".game-container").style.display = "block";

  //  ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡∏°
  currentQuestionIndex = 0;
  score = 0;
  timeLeft = 15;
  ownedBonuses = [];

  //  ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï UI
  document.getElementById("score").textContent = "‚úî 0";
  document.getElementById("timer").textContent = "00:15";

  //  **‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏•‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÄ‡∏Å‡πà‡∏≤**
  questions = getRandomQuestions(40, 5);
  currentRoundAnswers = questions.map((q) => ({
    image: q.image,
    correctAnswer: q.correct,
    userAnswer: null,
    timeout: true,
  }));

  //  ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
  loadQuestion(currentQuestionIndex);
  startTimer();
});

document.addEventListener("DOMContentLoaded", () => {
  const gameCompletePopup = document.getElementById("game-complete-popup");

  //  ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô localStorage ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Game Complete
  if (localStorage.getItem("gameFinished") === "true") {
    console.log("üîπ ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ Answers ‚Üí ‡πÅ‡∏™‡∏î‡∏á Game Complete");
    document.getElementById("final-score").textContent =
      localStorage.getItem("finalScore") || "0";
    gameCompletePopup.style.display = "flex";
  } else {
    //  ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ gameFinished ‚Üí ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
    console.log("üéÆ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà...");
    gameCompletePopup.style.display = "none"; //  ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô popup ‡πÇ‡∏ú‡∏•‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏≠‡∏á
    document.getElementById("game-background").style.display = "none";
    document.querySelector(".game-container").style.display = "block";

    questions = getRandomQuestions(40, 5);
    currentRoundAnswers = questions.map((q) => ({
      image: q.image,
      correctAnswer: q.correct,
      userAnswer: null,
      timeout: true,
    }));

    loadQuestion(currentQuestionIndex);
    startTimer();
  }
});

function exitGame() {
  console.log("üö™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°... ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");

  stopBackgroundMusic(); // ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á

  //  ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô localStorage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  localStorage.removeItem("gameFinished");
  localStorage.removeItem("finalScore");
  localStorage.removeItem("savedAnswers"); // ‚úÖ ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏â‡∏•‡∏¢‡πÄ‡∏Å‡πà‡∏≤
  localStorage.removeItem("latestAnswers");

  //  ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ `start.html`
  window.location.href = "start.html"; // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°
}

// ‡πÄ‡∏•‡πà‡∏ô Background Music ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° PLAY AGAIN
document.getElementById("play-again-btn").addEventListener("click", () => {
  console.log("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡πà‡∏ô Background Music");
  playBackgroundMusic();
});

//  ‡∏ú‡∏π‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô `exitGame()` ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° `EXIT`
// document.getElementById("exit-btn").addEventListener("click", exitGame);

document.addEventListener("DOMContentLoaded", () => {
  const exitButton = document.getElementById("exit-btn");

  if (exitButton) {
    exitButton.addEventListener("click", () => {
      console.log("üîÑ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Start..."); // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Console
      window.location.href = "start_Match.html"; // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Start
    });
  } else {
    console.error("‚ùå ‡∏õ‡∏∏‡πà‡∏° Exit ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏û‡∏ö‡πÉ‡∏ô DOM!");
  }
});

document.addEventListener("DOMContentLoaded", () => {
  const scoreElement = document.getElementById("score");
  if (scoreElement) {
    scoreElement.textContent = `‚úî ${score}`;
  } else {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö score ‡πÉ‡∏ô DOM!");
  }
});

document.addEventListener("DOMContentLoaded", () => {
  const timerElement = document.getElementById("timer-container");
  const scoreElement = document.getElementById("score-container");
  const questionTitle = document.getElementById("question-title");

  if (timerElement) timerElement.style.display = "block";
  if (scoreElement) scoreElement.textContent = `‚úî ${score}`;
  if (questionTitle) questionTitle.textContent = "Match It Up!!";
});

function goToSelectGame() {
  console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Å‡∏°...");
  window.location.href = "selectGame.html";
}

// ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
window.goToSelectGame = goToSelectGame;

// ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
const correctSound = new Audio("sounds/good-Job.mp3");
const wrongSound = new Audio("sounds/good-try.mp3");
const timeoutSound = new Audio("sounds/times-up.mp3");
const backgroundMusic = new Audio("sounds/music.mp3");
const bonusSound = new Audio("sounds/bonus-time.mp3");
const bonusClickSound = new Audio("sounds/click.mp3"); // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÇ‡∏ö‡∏ô‡∏±‡∏™
const bonusUseSound = new Audio("sounds/click.mp3"); // ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ä‡πâ‡πÇ‡∏ö‡∏ô‡∏±‡∏™

const buttonClickSound = new Audio("sounds/click.mp3"); // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
buttonClickSound.volume = 0.5; // üîä ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Background Music ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥ (Loop)
backgroundMusic.loop = true;
backgroundMusic.volume = 0.8; // ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
backgroundMusic.play(); // ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Å‡∏°

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
function playSound(result) {
  if (result === "correct") {
    correctSound.play();
  } else if (result === "wrong") {
    wrongSound.play();
  } else if (result === "timeout") {
    timeoutSound.play();
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Background Music
function playBackgroundMusic() {
  backgroundMusic.play();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î Background Music
function stopBackgroundMusic() {
  backgroundMusic.pause();
  backgroundMusic.currentTime = 0; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏û‡∏•‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á Bonus Time
function playBonusSound() {
  bonusSound.play();
}

function playButtonClickSound() {
  buttonClickSound.currentTime = 0; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏≤‡∏Å‡∏ï‡πâ‡∏ô
  playButtonClickSound(); // üîä ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
}

function updateScore(newScore) {
  let totalScore = parseInt(localStorage.getItem("totalScore") || 0);
  totalScore += newScore;
  localStorage.setItem("totalScore", totalScore);
  document.getElementById("playerScore").innerText = totalScore + " POINT";
}

function updateTotalScore(newScore) {
  let totalScore = parseInt(localStorage.getItem("totalScore")) || 0;
  totalScore += newScore;
  localStorage.setItem("totalScore", totalScore);
}

function saveScore(finalScore) {
    let playerName = localStorage.getItem("playerName");
    let currentScore = parseInt(localStorage.getItem(`score_${playerName}`) || 0);
    let newScore = currentScore + finalScore;

    localStorage.setItem(`score_${playerName}`, newScore);
    document.getElementById("playerScore").innerText = `${newScore} POINT`; // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI
}

document.addEventListener("DOMContentLoaded", () => {
  let playerName = localStorage.getItem("playerName") || "Guest";
  let totalScore = parseInt(localStorage.getItem(`score_${playerName}`) || "0");

  document.getElementById("playerName").textContent = playerName;
  document.getElementById("playerScore").textContent = `${totalScore} POINT`;
});



